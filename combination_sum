class Solution {
public:
    void solve(int i, int target, vector<int>& candidates,vector<int>& ds,vector<vector<int>>& ans){
        if(i==candidates.size()){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }
        if(candidates[i]<=target){
            ds.push_back(candidates[i]);
            solve(i,target-candidates[i],candidates,ds,ans);
            ds.pop_back();
        }
        solve(i+1,target,candidates,ds,ans);
        
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        int n=candidates.size();
        vector<vector<int>> ans;
        vector<int> ds;
        solve(0,target,candidates,ds,ans);
        
        return ans;
    }
};
